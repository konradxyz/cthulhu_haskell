#ifndef CTHULHU_GEN_H_
#define CTHULHU_GEN_H_
#include "static/seq/seq.h"
#define START_ENV_SIZE 2
#define START_LABEL 3
#define FINAL_LABEL 16
void executeContext(seq::Context* context) {
while ( context != nullptr ) {
switch (context->nextInstruction) {
case 0: /*call*/
SKIP
ALLOC_PARAMS(0)
GLOBAL(1, 1, 7)
RET
case 1: /*dups*/
SKIP
ARITH(1)
STORE_ARITH(1)
ARITH(1)
STORE_ARITH(3)
ARITH(2)
STORE_ARITH(5)
ALLOC_PARAMS(0)
CONSTRUCT(1)
STORE(6)
ALLOC_PARAMS(2)
PREPARE_PARAM_MOVE(5, 0)
PREPARE_PARAM_MOVE(6, 1)
CONSTRUCT(0)
STORE(4)
ALLOC_PARAMS(2)
PREPARE_PARAM_MOVE(3, 0)
PREPARE_PARAM_MOVE(4, 1)
CONSTRUCT(0)
STORE(2)
ALLOC_PARAMS(7)
PREPARE_PARAM_MOVE(1, 0)
PREPARE_PARAM_MOVE(2, 1)
CALL(11, 2)
case 2:
SKIP
RET
case 3: /*entry_point*/
SKIP
LOAD_COPY(0)
STORE(1)
ALLOC_PARAMS(0)
CALL(0, 5)
case 5:
SKIP
ADD_PARAM_MOVE(1, 4)
case 4:
SKIP
RET
case 6: /*member*/
SKIP
LOAD_COPY(1)
JMP_CASE({8 COMMA 9})
case 8:
SKIP
STORE_FIELD(0,3)
STORE_FIELD(1,2)
LOAD_COPY(0)
STORE(5)
LOAD_COPY(1)
STORE(6)
ALLOC_PARAMS(7)
PREPARE_PARAM_MOVE(5, 0)
PREPARE_PARAM_MOVE(6, 1)
CALL(6, 10)
case 10:
SKIP
STORE(4)
ARITH(AND(EQ(ENV_INT(0), ENV_INT(3)), ENV_INT(4)))
LOAD_ARITH
RET
JMP(7)
case 9:
SKIP
ARITH(0)
LOAD_ARITH
RET
JMP(7)
case 7:
SKIP
case 11: /*member*/
SKIP
LOAD_COPY(1)
JMP_CASE({13 COMMA 14})
case 13:
SKIP
STORE_FIELD(0,3)
STORE_FIELD(1,2)
LOAD_COPY(0)
STORE(5)
LOAD_COPY(1)
STORE(6)
ALLOC_PARAMS(7)
PREPARE_PARAM_MOVE(5, 0)
PREPARE_PARAM_MOVE(6, 1)
CALL(6, 15)
case 15:
SKIP
STORE(4)
ARITH(AND(EQ(ENV_INT(0), ENV_INT(3)), ENV_INT(4)))
LOAD_ARITH
RET
JMP(12)
case 14:
SKIP
ARITH(0)
LOAD_ARITH
RET
JMP(12)
case 12:
SKIP
case 16:
FINALIZE
default:
break;
}
}
}
#endif
