-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.0 from Parcthulhu.y
-----------------------------------------------------------------------------


terminal L_err is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	%start_pTopDef -> TopDef                           (1)
	%start_pListTopDef -> ListTopDef                   (2)
	%start_pListIdent -> ListIdent                     (3)
	%start_pDeclTemplateType -> DeclTemplateType       (4)
	%start_pListDeclTemplateType -> ListDeclTemplateType   (5)
	%start_pDataVariant -> DataVariant                 (6)
	%start_pListDataVariant -> ListDataVariant         (7)
	%start_pDataVariantField -> DataVariantField       (8)
	%start_pListDataVariantField -> ListDataVariantField   (9)
	%start_pSimpleType -> SimpleType                   (10)
	%start_pType1 -> Type1                             (11)
	%start_pType -> Type                               (12)
	%start_pListSimpleType -> ListSimpleType           (13)
	%start_pTypeListElem -> TypeListElem               (14)
	%start_pListTypeListElem -> ListTypeListElem       (15)
	%start_pExpr2 -> Expr2                             (16)
	%start_pExpr1 -> Expr1                             (17)
	%start_pExpr -> Expr                               (18)
	%start_pCaseVariant -> CaseVariant                 (19)
	%start_pListCaseVariant -> ListCaseVariant         (20)
	Ident -> L_ident                                   (21)
	Integer -> L_integ                                 (22)
	Program -> ListTopDef                              (23)
	TopDef -> Ident '::' Type ':' Ident ListIdent '=' Expr ';'   (24)
	TopDef -> Ident '<' ListDeclTemplateType '>' '::' Type ':' Ident ListIdent '=' Expr ';'   (25)
	TopDef -> 'data' Ident ListIdent '=' ListDataVariant ';'   (26)
	ListTopDef ->                                      (27)
	ListTopDef -> ListTopDef TopDef                    (28)
	ListIdent ->                                       (29)
	ListIdent -> ListIdent Ident                       (30)
	DeclTemplateType -> Ident                          (31)
	ListDeclTemplateType ->                            (32)
	ListDeclTemplateType -> DeclTemplateType           (33)
	ListDeclTemplateType -> DeclTemplateType ',' ListDeclTemplateType   (34)
	DataVariant -> Ident ListDataVariantField          (35)
	ListDataVariant -> DataVariant                     (36)
	ListDataVariant -> DataVariant '|' ListDataVariant   (37)
	DataVariantField -> Ident                          (38)
	DataVariantField -> '(' Type ')'                   (39)
	ListDataVariantField ->                            (40)
	ListDataVariantField -> ListDataVariantField DataVariantField   (41)
	SimpleType -> '(' Type ')'                         (42)
	SimpleType -> Ident                                (43)
	Type1 -> Ident ListSimpleType                      (44)
	Type1 -> '(' Type ')'                              (45)
	Type -> Type1 '->' Type                            (46)
	Type -> Type1                                      (47)
	ListSimpleType ->                                  (48)
	ListSimpleType -> ListSimpleType SimpleType        (49)
	TypeListElem -> Type                               (50)
	ListTypeListElem -> TypeListElem                   (51)
	ListTypeListElem -> TypeListElem ',' ListTypeListElem   (52)
	Expr2 -> Ident                                     (53)
	Expr2 -> Ident '<' ListTypeListElem '>'            (54)
	Expr2 -> Integer                                   (55)
	Expr2 -> '(' Expr ')'                              (56)
	Expr1 -> Expr1 Expr2                               (57)
	Expr1 -> Expr2                                     (58)
	Expr -> 'let' Ident '=' Expr1 'in' Expr            (59)
	Expr -> 'if' Expr1 'then' Expr 'else' Expr         (60)
	Expr -> 'case' Expr1 'of' ListCaseVariant          (61)
	Expr -> Expr1                                      (62)
	CaseVariant -> Ident ListIdent '->' Expr           (63)
	ListCaseVariant ->                                 (64)
	ListCaseVariant -> ListCaseVariant CaseVariant ';'   (65)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'('            { PT _ (TS _ 1) }
	')'            { PT _ (TS _ 2) }
	','            { PT _ (TS _ 3) }
	'->'           { PT _ (TS _ 4) }
	':'            { PT _ (TS _ 5) }
	'::'           { PT _ (TS _ 6) }
	';'            { PT _ (TS _ 7) }
	'<'            { PT _ (TS _ 8) }
	'='            { PT _ (TS _ 9) }
	'>'            { PT _ (TS _ 10) }
	'case'         { PT _ (TS _ 11) }
	'data'         { PT _ (TS _ 12) }
	'else'         { PT _ (TS _ 13) }
	'if'           { PT _ (TS _ 14) }
	'in'           { PT _ (TS _ 15) }
	'let'          { PT _ (TS _ 16) }
	'of'           { PT _ (TS _ 17) }
	'then'         { PT _ (TS _ 18) }
	'|'            { PT _ (TS _ 19) }
	L_ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }
	L_err          { _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	%start_pTopDef  rule  1
	%start_pListTopDef rule  2
	%start_pListIdent rule  3
	%start_pDeclTemplateType rule  4
	%start_pListDeclTemplateType rule  5
	%start_pDataVariant rule  6
	%start_pListDataVariant rule  7
	%start_pDataVariantField rule  8
	%start_pListDataVariantField rule  9
	%start_pSimpleType rule  10
	%start_pType1   rule  11
	%start_pType    rule  12
	%start_pListSimpleType rule  13
	%start_pTypeListElem rule  14
	%start_pListTypeListElem rule  15
	%start_pExpr2   rule  16
	%start_pExpr1   rule  17
	%start_pExpr    rule  18
	%start_pCaseVariant rule  19
	%start_pListCaseVariant rule  20
	Ident           rule  21
	Integer         rule  22
	Program         rule  23
	TopDef          rules 24, 25, 26
	ListTopDef      rules 27, 28
	ListIdent       rules 29, 30
	DeclTemplateType rule  31
	ListDeclTemplateType rules 32, 33, 34
	DataVariant     rule  35
	ListDataVariant rules 36, 37
	DataVariantField rules 38, 39
	ListDataVariantField rules 40, 41
	SimpleType      rules 42, 43
	Type1           rules 44, 45
	Type            rules 46, 47
	ListSimpleType  rules 48, 49
	TypeListElem    rule  50
	ListTypeListElem rules 51, 52
	Expr2           rules 53, 54, 55, 56
	Expr1           rules 57, 58
	Expr            rules 59, 60, 61, 62
	CaseVariant     rule  63
	ListCaseVariant rules 64, 65

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'data'         reduce using rule 27
	L_ident        reduce using rule 27
	%eof           reduce using rule 27

	Program        goto state 68
	ListTopDef     goto state 69

State 1


	'data'         shift, and enter state 67
	L_ident        shift, and enter state 22

	Ident          goto state 65
	TopDef         goto state 66

State 2


	'data'         reduce using rule 27
	L_ident        reduce using rule 27
	%eof           reduce using rule 27

	ListTopDef     goto state 64

State 3


	L_ident        reduce using rule 29
	%eof           reduce using rule 29

	ListIdent      goto state 63

State 4


	L_ident        shift, and enter state 22

	Ident          goto state 59
	DeclTemplateTypegoto state 62

State 5


	L_ident        shift, and enter state 22
	%eof           reduce using rule 32

	Ident          goto state 59
	DeclTemplateTypegoto state 60
	ListDeclTemplateTypegoto state 61

State 6


	L_ident        shift, and enter state 22

	Ident          goto state 55
	DataVariant    goto state 58

State 7


	L_ident        shift, and enter state 22

	Ident          goto state 55
	DataVariant    goto state 56
	ListDataVariantgoto state 57

State 8


	'('            shift, and enter state 54
	L_ident        shift, and enter state 22

	Ident          goto state 52
	DataVariantFieldgoto state 53

State 9


	'('            reduce using rule 40
	L_ident        reduce using rule 40
	%eof           reduce using rule 40

	ListDataVariantFieldgoto state 51

State 10


	'('            shift, and enter state 50
	L_ident        shift, and enter state 22

	Ident          goto state 48
	SimpleType     goto state 49

State 11


	'('            shift, and enter state 43
	L_ident        shift, and enter state 22

	Ident          goto state 38
	Type1          goto state 47

State 12


	'('            shift, and enter state 43
	L_ident        shift, and enter state 22

	Ident          goto state 38
	Type1          goto state 39
	Type           goto state 46

State 13


	'('            reduce using rule 48
	L_ident        reduce using rule 48
	%eof           reduce using rule 48

	ListSimpleType goto state 45

State 14


	'('            shift, and enter state 43
	L_ident        shift, and enter state 22

	Ident          goto state 38
	Type1          goto state 39
	Type           goto state 40
	TypeListElem   goto state 44

State 15


	'('            shift, and enter state 43
	L_ident        shift, and enter state 22

	Ident          goto state 38
	Type1          goto state 39
	Type           goto state 40
	TypeListElem   goto state 41
	ListTypeListElemgoto state 42

State 16


	'('            shift, and enter state 31
	L_ident        shift, and enter state 22
	L_integ        shift, and enter state 35

	Ident          goto state 26
	Integer        goto state 27
	Expr2          goto state 37

State 17


	'('            shift, and enter state 31
	L_ident        shift, and enter state 22
	L_integ        shift, and enter state 35

	Ident          goto state 26
	Integer        goto state 27
	Expr2          goto state 28
	Expr1          goto state 36

State 18


	'('            shift, and enter state 31
	'case'         shift, and enter state 32
	'if'           shift, and enter state 33
	'let'          shift, and enter state 34
	L_ident        shift, and enter state 22
	L_integ        shift, and enter state 35

	Ident          goto state 26
	Integer        goto state 27
	Expr2          goto state 28
	Expr1          goto state 29
	Expr           goto state 30

State 19


	L_ident        shift, and enter state 22

	Ident          goto state 24
	CaseVariant    goto state 25

State 20


	L_ident        reduce using rule 64
	%eof           reduce using rule 64

	ListCaseVariantgoto state 23

State 21


	L_ident        shift, and enter state 22


State 22

	Ident -> L_ident .                                  (rule 21)

	'('            reduce using rule 21
	')'            reduce using rule 21
	','            reduce using rule 21
	'->'           reduce using rule 21
	':'            reduce using rule 21
	'::'           reduce using rule 21
	';'            reduce using rule 21
	'<'            reduce using rule 21
	'='            reduce using rule 21
	'>'            reduce using rule 21
	'else'         reduce using rule 21
	'in'           reduce using rule 21
	'of'           reduce using rule 21
	'then'         reduce using rule 21
	'|'            reduce using rule 21
	L_ident        reduce using rule 21
	L_integ        reduce using rule 21
	%eof           reduce using rule 21


State 23

	%start_pListCaseVariant -> ListCaseVariant .        (rule 20)
	ListCaseVariant -> ListCaseVariant . CaseVariant ';'    (rule 65)

	L_ident        shift, and enter state 22
	%eof           accept

	Ident          goto state 24
	CaseVariant    goto state 93

State 24

	CaseVariant -> Ident . ListIdent '->' Expr          (rule 63)

	'->'           reduce using rule 29
	L_ident        reduce using rule 29

	ListIdent      goto state 92

State 25

	%start_pCaseVariant -> CaseVariant .                (rule 19)

	%eof           accept


State 26

	Expr2 -> Ident .                                    (rule 53)
	Expr2 -> Ident . '<' ListTypeListElem '>'           (rule 54)

	'('            reduce using rule 53
	')'            reduce using rule 53
	';'            reduce using rule 53
	'<'            shift, and enter state 91
	'else'         reduce using rule 53
	'in'           reduce using rule 53
	'of'           reduce using rule 53
	'then'         reduce using rule 53
	L_ident        reduce using rule 53
	L_integ        reduce using rule 53
	%eof           reduce using rule 53


State 27

	Expr2 -> Integer .                                  (rule 55)

	'('            reduce using rule 55
	')'            reduce using rule 55
	';'            reduce using rule 55
	'else'         reduce using rule 55
	'in'           reduce using rule 55
	'of'           reduce using rule 55
	'then'         reduce using rule 55
	L_ident        reduce using rule 55
	L_integ        reduce using rule 55
	%eof           reduce using rule 55


State 28

	Expr1 -> Expr2 .                                    (rule 58)

	'('            reduce using rule 58
	')'            reduce using rule 58
	';'            reduce using rule 58
	'else'         reduce using rule 58
	'in'           reduce using rule 58
	'of'           reduce using rule 58
	'then'         reduce using rule 58
	L_ident        reduce using rule 58
	L_integ        reduce using rule 58
	%eof           reduce using rule 58


State 29

	Expr1 -> Expr1 . Expr2                              (rule 57)
	Expr -> Expr1 .                                     (rule 62)

	'('            shift, and enter state 31
	')'            reduce using rule 62
	';'            reduce using rule 62
	'else'         reduce using rule 62
	L_ident        shift, and enter state 22
	L_integ        shift, and enter state 35
	%eof           reduce using rule 62

	Ident          goto state 26
	Integer        goto state 27
	Expr2          goto state 86

State 30

	%start_pExpr -> Expr .                              (rule 18)

	%eof           accept


State 31

	Expr2 -> '(' . Expr ')'                             (rule 56)

	'('            shift, and enter state 31
	'case'         shift, and enter state 32
	'if'           shift, and enter state 33
	'let'          shift, and enter state 34
	L_ident        shift, and enter state 22
	L_integ        shift, and enter state 35

	Ident          goto state 26
	Integer        goto state 27
	Expr2          goto state 28
	Expr1          goto state 29
	Expr           goto state 90

State 32

	Expr -> 'case' . Expr1 'of' ListCaseVariant         (rule 61)

	'('            shift, and enter state 31
	L_ident        shift, and enter state 22
	L_integ        shift, and enter state 35

	Ident          goto state 26
	Integer        goto state 27
	Expr2          goto state 28
	Expr1          goto state 89

State 33

	Expr -> 'if' . Expr1 'then' Expr 'else' Expr        (rule 60)

	'('            shift, and enter state 31
	L_ident        shift, and enter state 22
	L_integ        shift, and enter state 35

	Ident          goto state 26
	Integer        goto state 27
	Expr2          goto state 28
	Expr1          goto state 88

State 34

	Expr -> 'let' . Ident '=' Expr1 'in' Expr           (rule 59)

	L_ident        shift, and enter state 22

	Ident          goto state 87

State 35

	Integer -> L_integ .                                (rule 22)

	'('            reduce using rule 22
	')'            reduce using rule 22
	';'            reduce using rule 22
	'else'         reduce using rule 22
	'in'           reduce using rule 22
	'of'           reduce using rule 22
	'then'         reduce using rule 22
	L_ident        reduce using rule 22
	L_integ        reduce using rule 22
	%eof           reduce using rule 22


State 36

	%start_pExpr1 -> Expr1 .                            (rule 17)
	Expr1 -> Expr1 . Expr2                              (rule 57)

	'('            shift, and enter state 31
	L_ident        shift, and enter state 22
	L_integ        shift, and enter state 35
	%eof           accept

	Ident          goto state 26
	Integer        goto state 27
	Expr2          goto state 86

State 37

	%start_pExpr2 -> Expr2 .                            (rule 16)

	%eof           accept


State 38

	Type1 -> Ident . ListSimpleType                     (rule 44)

	'('            reduce using rule 48
	')'            reduce using rule 48
	','            reduce using rule 48
	'->'           reduce using rule 48
	':'            reduce using rule 48
	'>'            reduce using rule 48
	L_ident        reduce using rule 48
	%eof           reduce using rule 48

	ListSimpleType goto state 85

State 39

	Type -> Type1 . '->' Type                           (rule 46)
	Type -> Type1 .                                     (rule 47)

	')'            reduce using rule 47
	','            reduce using rule 47
	'->'           shift, and enter state 84
	':'            reduce using rule 47
	'>'            reduce using rule 47
	%eof           reduce using rule 47


State 40

	TypeListElem -> Type .                              (rule 50)

	','            reduce using rule 50
	'>'            reduce using rule 50
	%eof           reduce using rule 50


State 41

	ListTypeListElem -> TypeListElem .                  (rule 51)
	ListTypeListElem -> TypeListElem . ',' ListTypeListElem    (rule 52)

	','            shift, and enter state 83
	'>'            reduce using rule 51
	%eof           reduce using rule 51


State 42

	%start_pListTypeListElem -> ListTypeListElem .      (rule 15)

	%eof           accept


State 43

	Type1 -> '(' . Type ')'                             (rule 45)

	'('            shift, and enter state 43
	L_ident        shift, and enter state 22

	Ident          goto state 38
	Type1          goto state 39
	Type           goto state 82

State 44

	%start_pTypeListElem -> TypeListElem .              (rule 14)

	%eof           accept


State 45

	%start_pListSimpleType -> ListSimpleType .          (rule 13)
	ListSimpleType -> ListSimpleType . SimpleType       (rule 49)

	'('            shift, and enter state 50
	L_ident        shift, and enter state 22
	%eof           accept

	Ident          goto state 48
	SimpleType     goto state 81

State 46

	%start_pType -> Type .                              (rule 12)

	%eof           accept


State 47

	%start_pType1 -> Type1 .                            (rule 11)

	%eof           accept


State 48

	SimpleType -> Ident .                               (rule 43)

	'('            reduce using rule 43
	')'            reduce using rule 43
	','            reduce using rule 43
	'->'           reduce using rule 43
	':'            reduce using rule 43
	'>'            reduce using rule 43
	L_ident        reduce using rule 43
	%eof           reduce using rule 43


State 49

	%start_pSimpleType -> SimpleType .                  (rule 10)

	%eof           accept


State 50

	SimpleType -> '(' . Type ')'                        (rule 42)

	'('            shift, and enter state 43
	L_ident        shift, and enter state 22

	Ident          goto state 38
	Type1          goto state 39
	Type           goto state 80

State 51

	%start_pListDataVariantField -> ListDataVariantField .    (rule 9)
	ListDataVariantField -> ListDataVariantField . DataVariantField    (rule 41)

	'('            shift, and enter state 54
	L_ident        shift, and enter state 22
	%eof           accept

	Ident          goto state 52
	DataVariantFieldgoto state 79

State 52

	DataVariantField -> Ident .                         (rule 38)

	'('            reduce using rule 38
	';'            reduce using rule 38
	'|'            reduce using rule 38
	L_ident        reduce using rule 38
	%eof           reduce using rule 38


State 53

	%start_pDataVariantField -> DataVariantField .      (rule 8)

	%eof           accept


State 54

	DataVariantField -> '(' . Type ')'                  (rule 39)

	'('            shift, and enter state 43
	L_ident        shift, and enter state 22

	Ident          goto state 38
	Type1          goto state 39
	Type           goto state 78

State 55

	DataVariant -> Ident . ListDataVariantField         (rule 35)

	'('            reduce using rule 40
	';'            reduce using rule 40
	'|'            reduce using rule 40
	L_ident        reduce using rule 40
	%eof           reduce using rule 40

	ListDataVariantFieldgoto state 77

State 56

	ListDataVariant -> DataVariant .                    (rule 36)
	ListDataVariant -> DataVariant . '|' ListDataVariant    (rule 37)

	';'            reduce using rule 36
	'|'            shift, and enter state 76
	%eof           reduce using rule 36


State 57

	%start_pListDataVariant -> ListDataVariant .        (rule 7)

	%eof           accept


State 58

	%start_pDataVariant -> DataVariant .                (rule 6)

	%eof           accept


State 59

	DeclTemplateType -> Ident .                         (rule 31)

	','            reduce using rule 31
	'>'            reduce using rule 31
	%eof           reduce using rule 31


State 60

	ListDeclTemplateType -> DeclTemplateType .          (rule 33)
	ListDeclTemplateType -> DeclTemplateType . ',' ListDeclTemplateType    (rule 34)

	','            shift, and enter state 75
	'>'            reduce using rule 33
	%eof           reduce using rule 33


State 61

	%start_pListDeclTemplateType -> ListDeclTemplateType .    (rule 5)

	%eof           accept


State 62

	%start_pDeclTemplateType -> DeclTemplateType .      (rule 4)

	%eof           accept


State 63

	%start_pListIdent -> ListIdent .                    (rule 3)
	ListIdent -> ListIdent . Ident                      (rule 30)

	L_ident        shift, and enter state 22
	%eof           accept

	Ident          goto state 74

State 64

	%start_pListTopDef -> ListTopDef .                  (rule 2)
	ListTopDef -> ListTopDef . TopDef                   (rule 28)

	'data'         shift, and enter state 67
	L_ident        shift, and enter state 22
	%eof           accept

	Ident          goto state 65
	TopDef         goto state 70

State 65

	TopDef -> Ident . '::' Type ':' Ident ListIdent '=' Expr ';'    (rule 24)
	TopDef -> Ident . '<' ListDeclTemplateType '>' '::' Type ':' Ident ListIdent '=' Expr ';'    (rule 25)

	'::'           shift, and enter state 72
	'<'            shift, and enter state 73


State 66

	%start_pTopDef -> TopDef .                          (rule 1)

	%eof           accept


State 67

	TopDef -> 'data' . Ident ListIdent '=' ListDataVariant ';'    (rule 26)

	L_ident        shift, and enter state 22

	Ident          goto state 71

State 68

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 69

	Program -> ListTopDef .                             (rule 23)
	ListTopDef -> ListTopDef . TopDef                   (rule 28)

	'data'         shift, and enter state 67
	L_ident        shift, and enter state 22
	%eof           reduce using rule 23

	Ident          goto state 65
	TopDef         goto state 70

State 70

	ListTopDef -> ListTopDef TopDef .                   (rule 28)

	'data'         reduce using rule 28
	L_ident        reduce using rule 28
	%eof           reduce using rule 28


State 71

	TopDef -> 'data' Ident . ListIdent '=' ListDataVariant ';'    (rule 26)

	'='            reduce using rule 29
	L_ident        reduce using rule 29

	ListIdent      goto state 110

State 72

	TopDef -> Ident '::' . Type ':' Ident ListIdent '=' Expr ';'    (rule 24)

	'('            shift, and enter state 43
	L_ident        shift, and enter state 22

	Ident          goto state 38
	Type1          goto state 39
	Type           goto state 109

State 73

	TopDef -> Ident '<' . ListDeclTemplateType '>' '::' Type ':' Ident ListIdent '=' Expr ';'    (rule 25)

	'>'            reduce using rule 32
	L_ident        shift, and enter state 22

	Ident          goto state 59
	DeclTemplateTypegoto state 60
	ListDeclTemplateTypegoto state 108

State 74

	ListIdent -> ListIdent Ident .                      (rule 30)

	'->'           reduce using rule 30
	'='            reduce using rule 30
	L_ident        reduce using rule 30
	%eof           reduce using rule 30


State 75

	ListDeclTemplateType -> DeclTemplateType ',' . ListDeclTemplateType    (rule 34)

	'>'            reduce using rule 32
	L_ident        shift, and enter state 22
	%eof           reduce using rule 32

	Ident          goto state 59
	DeclTemplateTypegoto state 60
	ListDeclTemplateTypegoto state 107

State 76

	ListDataVariant -> DataVariant '|' . ListDataVariant    (rule 37)

	L_ident        shift, and enter state 22

	Ident          goto state 55
	DataVariant    goto state 56
	ListDataVariantgoto state 106

State 77

	DataVariant -> Ident ListDataVariantField .         (rule 35)
	ListDataVariantField -> ListDataVariantField . DataVariantField    (rule 41)

	'('            shift, and enter state 54
	';'            reduce using rule 35
	'|'            reduce using rule 35
	L_ident        shift, and enter state 22
	%eof           reduce using rule 35

	Ident          goto state 52
	DataVariantFieldgoto state 79

State 78

	DataVariantField -> '(' Type . ')'                  (rule 39)

	')'            shift, and enter state 105


State 79

	ListDataVariantField -> ListDataVariantField DataVariantField .    (rule 41)

	'('            reduce using rule 41
	';'            reduce using rule 41
	'|'            reduce using rule 41
	L_ident        reduce using rule 41
	%eof           reduce using rule 41


State 80

	SimpleType -> '(' Type . ')'                        (rule 42)

	')'            shift, and enter state 104


State 81

	ListSimpleType -> ListSimpleType SimpleType .       (rule 49)

	'('            reduce using rule 49
	')'            reduce using rule 49
	','            reduce using rule 49
	'->'           reduce using rule 49
	':'            reduce using rule 49
	'>'            reduce using rule 49
	L_ident        reduce using rule 49
	%eof           reduce using rule 49


State 82

	Type1 -> '(' Type . ')'                             (rule 45)

	')'            shift, and enter state 103


State 83

	ListTypeListElem -> TypeListElem ',' . ListTypeListElem    (rule 52)

	'('            shift, and enter state 43
	L_ident        shift, and enter state 22

	Ident          goto state 38
	Type1          goto state 39
	Type           goto state 40
	TypeListElem   goto state 41
	ListTypeListElemgoto state 102

State 84

	Type -> Type1 '->' . Type                           (rule 46)

	'('            shift, and enter state 43
	L_ident        shift, and enter state 22

	Ident          goto state 38
	Type1          goto state 39
	Type           goto state 101

State 85

	Type1 -> Ident ListSimpleType .                     (rule 44)
	ListSimpleType -> ListSimpleType . SimpleType       (rule 49)

	'('            shift, and enter state 50
	')'            reduce using rule 44
	','            reduce using rule 44
	'->'           reduce using rule 44
	':'            reduce using rule 44
	'>'            reduce using rule 44
	L_ident        shift, and enter state 22
	%eof           reduce using rule 44

	Ident          goto state 48
	SimpleType     goto state 81

State 86

	Expr1 -> Expr1 Expr2 .                              (rule 57)

	'('            reduce using rule 57
	')'            reduce using rule 57
	';'            reduce using rule 57
	'else'         reduce using rule 57
	'in'           reduce using rule 57
	'of'           reduce using rule 57
	'then'         reduce using rule 57
	L_ident        reduce using rule 57
	L_integ        reduce using rule 57
	%eof           reduce using rule 57


State 87

	Expr -> 'let' Ident . '=' Expr1 'in' Expr           (rule 59)

	'='            shift, and enter state 100


State 88

	Expr1 -> Expr1 . Expr2                              (rule 57)
	Expr -> 'if' Expr1 . 'then' Expr 'else' Expr        (rule 60)

	'('            shift, and enter state 31
	'then'         shift, and enter state 99
	L_ident        shift, and enter state 22
	L_integ        shift, and enter state 35

	Ident          goto state 26
	Integer        goto state 27
	Expr2          goto state 86

State 89

	Expr1 -> Expr1 . Expr2                              (rule 57)
	Expr -> 'case' Expr1 . 'of' ListCaseVariant         (rule 61)

	'('            shift, and enter state 31
	'of'           shift, and enter state 98
	L_ident        shift, and enter state 22
	L_integ        shift, and enter state 35

	Ident          goto state 26
	Integer        goto state 27
	Expr2          goto state 86

State 90

	Expr2 -> '(' Expr . ')'                             (rule 56)

	')'            shift, and enter state 97


State 91

	Expr2 -> Ident '<' . ListTypeListElem '>'           (rule 54)

	'('            shift, and enter state 43
	L_ident        shift, and enter state 22

	Ident          goto state 38
	Type1          goto state 39
	Type           goto state 40
	TypeListElem   goto state 41
	ListTypeListElemgoto state 96

State 92

	ListIdent -> ListIdent . Ident                      (rule 30)
	CaseVariant -> Ident ListIdent . '->' Expr          (rule 63)

	'->'           shift, and enter state 95
	L_ident        shift, and enter state 22

	Ident          goto state 74

State 93

	ListCaseVariant -> ListCaseVariant CaseVariant . ';'    (rule 65)

	';'            shift, and enter state 94


State 94

	ListCaseVariant -> ListCaseVariant CaseVariant ';' .    (rule 65)

	')'            reduce using rule 65
	';'            reduce using rule 65
	'else'         reduce using rule 65
	L_ident        reduce using rule 65
	%eof           reduce using rule 65


State 95

	CaseVariant -> Ident ListIdent '->' . Expr          (rule 63)

	'('            shift, and enter state 31
	'case'         shift, and enter state 32
	'if'           shift, and enter state 33
	'let'          shift, and enter state 34
	L_ident        shift, and enter state 22
	L_integ        shift, and enter state 35

	Ident          goto state 26
	Integer        goto state 27
	Expr2          goto state 28
	Expr1          goto state 29
	Expr           goto state 118

State 96

	Expr2 -> Ident '<' ListTypeListElem . '>'           (rule 54)

	'>'            shift, and enter state 117


State 97

	Expr2 -> '(' Expr ')' .                             (rule 56)

	'('            reduce using rule 56
	')'            reduce using rule 56
	';'            reduce using rule 56
	'else'         reduce using rule 56
	'in'           reduce using rule 56
	'of'           reduce using rule 56
	'then'         reduce using rule 56
	L_ident        reduce using rule 56
	L_integ        reduce using rule 56
	%eof           reduce using rule 56


State 98

	Expr -> 'case' Expr1 'of' . ListCaseVariant         (rule 61)

	')'            reduce using rule 64
	';'            reduce using rule 64
	'else'         reduce using rule 64
	L_ident        reduce using rule 64
	%eof           reduce using rule 64

	ListCaseVariantgoto state 116

State 99

	Expr -> 'if' Expr1 'then' . Expr 'else' Expr        (rule 60)

	'('            shift, and enter state 31
	'case'         shift, and enter state 32
	'if'           shift, and enter state 33
	'let'          shift, and enter state 34
	L_ident        shift, and enter state 22
	L_integ        shift, and enter state 35

	Ident          goto state 26
	Integer        goto state 27
	Expr2          goto state 28
	Expr1          goto state 29
	Expr           goto state 115

State 100

	Expr -> 'let' Ident '=' . Expr1 'in' Expr           (rule 59)

	'('            shift, and enter state 31
	L_ident        shift, and enter state 22
	L_integ        shift, and enter state 35

	Ident          goto state 26
	Integer        goto state 27
	Expr2          goto state 28
	Expr1          goto state 114

State 101

	Type -> Type1 '->' Type .                           (rule 46)

	')'            reduce using rule 46
	','            reduce using rule 46
	':'            reduce using rule 46
	'>'            reduce using rule 46
	%eof           reduce using rule 46


State 102

	ListTypeListElem -> TypeListElem ',' ListTypeListElem .    (rule 52)

	'>'            reduce using rule 52
	%eof           reduce using rule 52


State 103

	Type1 -> '(' Type ')' .                             (rule 45)

	')'            reduce using rule 45
	','            reduce using rule 45
	'->'           reduce using rule 45
	':'            reduce using rule 45
	'>'            reduce using rule 45
	%eof           reduce using rule 45


State 104

	SimpleType -> '(' Type ')' .                        (rule 42)

	'('            reduce using rule 42
	')'            reduce using rule 42
	','            reduce using rule 42
	'->'           reduce using rule 42
	':'            reduce using rule 42
	'>'            reduce using rule 42
	L_ident        reduce using rule 42
	%eof           reduce using rule 42


State 105

	DataVariantField -> '(' Type ')' .                  (rule 39)

	'('            reduce using rule 39
	';'            reduce using rule 39
	'|'            reduce using rule 39
	L_ident        reduce using rule 39
	%eof           reduce using rule 39


State 106

	ListDataVariant -> DataVariant '|' ListDataVariant .    (rule 37)

	';'            reduce using rule 37
	%eof           reduce using rule 37


State 107

	ListDeclTemplateType -> DeclTemplateType ',' ListDeclTemplateType .    (rule 34)

	'>'            reduce using rule 34
	%eof           reduce using rule 34


State 108

	TopDef -> Ident '<' ListDeclTemplateType . '>' '::' Type ':' Ident ListIdent '=' Expr ';'    (rule 25)

	'>'            shift, and enter state 113


State 109

	TopDef -> Ident '::' Type . ':' Ident ListIdent '=' Expr ';'    (rule 24)

	':'            shift, and enter state 112


State 110

	TopDef -> 'data' Ident ListIdent . '=' ListDataVariant ';'    (rule 26)
	ListIdent -> ListIdent . Ident                      (rule 30)

	'='            shift, and enter state 111
	L_ident        shift, and enter state 22

	Ident          goto state 74

State 111

	TopDef -> 'data' Ident ListIdent '=' . ListDataVariant ';'    (rule 26)

	L_ident        shift, and enter state 22

	Ident          goto state 55
	DataVariant    goto state 56
	ListDataVariantgoto state 123

State 112

	TopDef -> Ident '::' Type ':' . Ident ListIdent '=' Expr ';'    (rule 24)

	L_ident        shift, and enter state 22

	Ident          goto state 122

State 113

	TopDef -> Ident '<' ListDeclTemplateType '>' . '::' Type ':' Ident ListIdent '=' Expr ';'    (rule 25)

	'::'           shift, and enter state 121


State 114

	Expr1 -> Expr1 . Expr2                              (rule 57)
	Expr -> 'let' Ident '=' Expr1 . 'in' Expr           (rule 59)

	'('            shift, and enter state 31
	'in'           shift, and enter state 120
	L_ident        shift, and enter state 22
	L_integ        shift, and enter state 35

	Ident          goto state 26
	Integer        goto state 27
	Expr2          goto state 86

State 115

	Expr -> 'if' Expr1 'then' Expr . 'else' Expr        (rule 60)

	'else'         shift, and enter state 119


State 116

	Expr -> 'case' Expr1 'of' ListCaseVariant .         (rule 61)
	ListCaseVariant -> ListCaseVariant . CaseVariant ';'    (rule 65)

	')'            reduce using rule 61
	';'            reduce using rule 61
	'else'         reduce using rule 61
	L_ident        shift, and enter state 22
	%eof           reduce using rule 61

	Ident          goto state 24
	CaseVariant    goto state 93

State 117

	Expr2 -> Ident '<' ListTypeListElem '>' .           (rule 54)

	'('            reduce using rule 54
	')'            reduce using rule 54
	';'            reduce using rule 54
	'else'         reduce using rule 54
	'in'           reduce using rule 54
	'of'           reduce using rule 54
	'then'         reduce using rule 54
	L_ident        reduce using rule 54
	L_integ        reduce using rule 54
	%eof           reduce using rule 54


State 118

	CaseVariant -> Ident ListIdent '->' Expr .          (rule 63)

	';'            reduce using rule 63
	%eof           reduce using rule 63


State 119

	Expr -> 'if' Expr1 'then' Expr 'else' . Expr        (rule 60)

	'('            shift, and enter state 31
	'case'         shift, and enter state 32
	'if'           shift, and enter state 33
	'let'          shift, and enter state 34
	L_ident        shift, and enter state 22
	L_integ        shift, and enter state 35

	Ident          goto state 26
	Integer        goto state 27
	Expr2          goto state 28
	Expr1          goto state 29
	Expr           goto state 128

State 120

	Expr -> 'let' Ident '=' Expr1 'in' . Expr           (rule 59)

	'('            shift, and enter state 31
	'case'         shift, and enter state 32
	'if'           shift, and enter state 33
	'let'          shift, and enter state 34
	L_ident        shift, and enter state 22
	L_integ        shift, and enter state 35

	Ident          goto state 26
	Integer        goto state 27
	Expr2          goto state 28
	Expr1          goto state 29
	Expr           goto state 127

State 121

	TopDef -> Ident '<' ListDeclTemplateType '>' '::' . Type ':' Ident ListIdent '=' Expr ';'    (rule 25)

	'('            shift, and enter state 43
	L_ident        shift, and enter state 22

	Ident          goto state 38
	Type1          goto state 39
	Type           goto state 126

State 122

	TopDef -> Ident '::' Type ':' Ident . ListIdent '=' Expr ';'    (rule 24)

	'='            reduce using rule 29
	L_ident        reduce using rule 29

	ListIdent      goto state 125

State 123

	TopDef -> 'data' Ident ListIdent '=' ListDataVariant . ';'    (rule 26)

	';'            shift, and enter state 124


State 124

	TopDef -> 'data' Ident ListIdent '=' ListDataVariant ';' .    (rule 26)

	'data'         reduce using rule 26
	L_ident        reduce using rule 26
	%eof           reduce using rule 26


State 125

	TopDef -> Ident '::' Type ':' Ident ListIdent . '=' Expr ';'    (rule 24)
	ListIdent -> ListIdent . Ident                      (rule 30)

	'='            shift, and enter state 130
	L_ident        shift, and enter state 22

	Ident          goto state 74

State 126

	TopDef -> Ident '<' ListDeclTemplateType '>' '::' Type . ':' Ident ListIdent '=' Expr ';'    (rule 25)

	':'            shift, and enter state 129


State 127

	Expr -> 'let' Ident '=' Expr1 'in' Expr .           (rule 59)

	')'            reduce using rule 59
	';'            reduce using rule 59
	'else'         reduce using rule 59
	%eof           reduce using rule 59


State 128

	Expr -> 'if' Expr1 'then' Expr 'else' Expr .        (rule 60)

	')'            reduce using rule 60
	';'            reduce using rule 60
	'else'         reduce using rule 60
	%eof           reduce using rule 60


State 129

	TopDef -> Ident '<' ListDeclTemplateType '>' '::' Type ':' . Ident ListIdent '=' Expr ';'    (rule 25)

	L_ident        shift, and enter state 22

	Ident          goto state 132

State 130

	TopDef -> Ident '::' Type ':' Ident ListIdent '=' . Expr ';'    (rule 24)

	'('            shift, and enter state 31
	'case'         shift, and enter state 32
	'if'           shift, and enter state 33
	'let'          shift, and enter state 34
	L_ident        shift, and enter state 22
	L_integ        shift, and enter state 35

	Ident          goto state 26
	Integer        goto state 27
	Expr2          goto state 28
	Expr1          goto state 29
	Expr           goto state 131

State 131

	TopDef -> Ident '::' Type ':' Ident ListIdent '=' Expr . ';'    (rule 24)

	';'            shift, and enter state 134


State 132

	TopDef -> Ident '<' ListDeclTemplateType '>' '::' Type ':' Ident . ListIdent '=' Expr ';'    (rule 25)

	'='            reduce using rule 29
	L_ident        reduce using rule 29

	ListIdent      goto state 133

State 133

	TopDef -> Ident '<' ListDeclTemplateType '>' '::' Type ':' Ident ListIdent . '=' Expr ';'    (rule 25)
	ListIdent -> ListIdent . Ident                      (rule 30)

	'='            shift, and enter state 135
	L_ident        shift, and enter state 22

	Ident          goto state 74

State 134

	TopDef -> Ident '::' Type ':' Ident ListIdent '=' Expr ';' .    (rule 24)

	'data'         reduce using rule 24
	L_ident        reduce using rule 24
	%eof           reduce using rule 24


State 135

	TopDef -> Ident '<' ListDeclTemplateType '>' '::' Type ':' Ident ListIdent '=' . Expr ';'    (rule 25)

	'('            shift, and enter state 31
	'case'         shift, and enter state 32
	'if'           shift, and enter state 33
	'let'          shift, and enter state 34
	L_ident        shift, and enter state 22
	L_integ        shift, and enter state 35

	Ident          goto state 26
	Integer        goto state 27
	Expr2          goto state 28
	Expr1          goto state 29
	Expr           goto state 136

State 136

	TopDef -> Ident '<' ListDeclTemplateType '>' '::' Type ':' Ident ListIdent '=' Expr . ';'    (rule 25)

	';'            shift, and enter state 137


State 137

	TopDef -> Ident '<' ListDeclTemplateType '>' '::' Type ':' Ident ListIdent '=' Expr ';' .    (rule 25)

	'data'         reduce using rule 25
	L_ident        reduce using rule 25
	%eof           reduce using rule 25


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 66
Number of terminals: 22
Number of non-terminals: 44
Number of states: 138
