#include<iostream>
#ifndef CTHULHU_GEN_H_
#define CTHULHU_GEN_H_
#define START_ENV_SIZE 2
#define START_LABEL 48
#define FINAL_LABEL 63
#include "static/seq/seq.h"
void executeContext(std::unique_ptr<seq::Context>&& context) {
while ( context != nullptr ) {
switch (context->nextInstruction) {
case 0:
SKIP// call
LOAD_COPY(0)
STORE(48)
ALLOC_PARAMS(5)
PREPARE_PARAM_MOVE(48, 0)
CALL_FORK(62, 47)
case 47:
SKIP
STORE(1)
LOAD_COPY(0)
STORE(47)
ALLOC_PARAMS(5)
PREPARE_PARAM_MOVE(47, 0)
CALL_FORK(62, 46)
case 46:
SKIP
STORE(2)
LOAD_COPY(0)
STORE(46)
ALLOC_PARAMS(5)
PREPARE_PARAM_MOVE(46, 0)
CALL_FORK(62, 45)
case 45:
SKIP
STORE(3)
LOAD_COPY(0)
STORE(45)
ALLOC_PARAMS(5)
PREPARE_PARAM_MOVE(45, 0)
CALL_FORK(62, 44)
case 44:
SKIP
STORE(4)
LOAD_COPY(0)
STORE(44)
ALLOC_PARAMS(5)
PREPARE_PARAM_MOVE(44, 0)
CALL_FORK(62, 43)
case 43:
SKIP
STORE(5)
LOAD_COPY(0)
STORE(43)
ALLOC_PARAMS(5)
PREPARE_PARAM_MOVE(43, 0)
CALL_FORK(62, 42)
case 42:
SKIP
STORE(6)
LOAD_COPY(0)
STORE(42)
ALLOC_PARAMS(5)
PREPARE_PARAM_MOVE(42, 0)
CALL_FORK(62, 41)
case 41:
SKIP
STORE(7)
LOAD_COPY(0)
STORE(41)
ALLOC_PARAMS(5)
PREPARE_PARAM_MOVE(41, 0)
CALL_FORK(62, 40)
case 40:
SKIP
STORE(8)
LOAD_COPY(0)
STORE(40)
ALLOC_PARAMS(5)
PREPARE_PARAM_MOVE(40, 0)
CALL_FORK(62, 39)
case 39:
SKIP
STORE(9)
LOAD_COPY(0)
STORE(39)
ALLOC_PARAMS(5)
PREPARE_PARAM_MOVE(39, 0)
CALL_FORK(62, 38)
case 38:
SKIP
STORE(10)
LOAD_COPY(0)
STORE(38)
ALLOC_PARAMS(5)
PREPARE_PARAM_MOVE(38, 0)
CALL_FORK(62, 37)
case 37:
SKIP
STORE(11)
LOAD_COPY(0)
STORE(37)
ALLOC_PARAMS(5)
PREPARE_PARAM_MOVE(37, 0)
CALL_FORK(62, 36)
case 36:
SKIP
STORE(12)
LOAD_COPY(0)
STORE(36)
ALLOC_PARAMS(5)
PREPARE_PARAM_MOVE(36, 0)
CALL_FORK(62, 35)
case 35:
SKIP
STORE(13)
LOAD_COPY(0)
STORE(35)
ALLOC_PARAMS(5)
PREPARE_PARAM_MOVE(35, 0)
CALL_FORK(62, 34)
case 34:
SKIP
STORE(14)
LOAD_COPY(0)
STORE(34)
ALLOC_PARAMS(5)
PREPARE_PARAM_MOVE(34, 0)
CALL_FORK(62, 33)
case 33:
SKIP
STORE(15)
LOAD_COPY(0)
STORE(33)
ALLOC_PARAMS(5)
PREPARE_PARAM_MOVE(33, 0)
CALL_FORK(62, 32)
case 32:
SKIP
STORE(16)
LOAD_COPY(0)
STORE(32)
ALLOC_PARAMS(5)
PREPARE_PARAM_MOVE(32, 0)
CALL_FORK(62, 31)
case 31:
SKIP
STORE(17)
LOAD_COPY(0)
STORE(31)
ALLOC_PARAMS(5)
PREPARE_PARAM_MOVE(31, 0)
CALL_FORK(62, 30)
case 30:
SKIP
STORE(18)
LOAD_COPY(0)
STORE(30)
ALLOC_PARAMS(5)
PREPARE_PARAM_MOVE(30, 0)
CALL_FORK(62, 29)
case 29:
SKIP
STORE(19)
LOAD_COPY(0)
STORE(29)
ALLOC_PARAMS(5)
PREPARE_PARAM_MOVE(29, 0)
CALL_FORK(62, 28)
case 28:
SKIP
STORE(20)
LOAD_COPY(0)
STORE(28)
ALLOC_PARAMS(5)
PREPARE_PARAM_MOVE(28, 0)
CALL_FORK(62, 27)
case 27:
SKIP
STORE(21)
LOAD_COPY(0)
STORE(27)
ALLOC_PARAMS(5)
PREPARE_PARAM_MOVE(27, 0)
CALL_FORK(62, 26)
case 26:
SKIP
STORE(22)
LOAD_COPY(0)
STORE(26)
ALLOC_PARAMS(5)
PREPARE_PARAM_MOVE(26, 0)
CALL_FORK(62, 25)
case 25:
SKIP
STORE(23)
LOAD_COPY(0)
STORE(25)
ALLOC_PARAMS(5)
PREPARE_PARAM_MOVE(25, 0)
CALL(62, 24)
case 24:
SKIP
STORE(24)
WAIT(1, 23)
case 23:
SKIP
WAIT(2, 22)
case 22:
SKIP
WAIT(3, 21)
case 21:
SKIP
WAIT(4, 20)
case 20:
SKIP
WAIT(5, 19)
case 19:
SKIP
WAIT(6, 18)
case 18:
SKIP
WAIT(7, 17)
case 17:
SKIP
WAIT(8, 16)
case 16:
SKIP
WAIT(9, 15)
case 15:
SKIP
WAIT(10, 14)
case 14:
SKIP
WAIT(11, 13)
case 13:
SKIP
WAIT(12, 12)
case 12:
SKIP
WAIT(13, 11)
case 11:
SKIP
WAIT(14, 10)
case 10:
SKIP
WAIT(15, 9)
case 9:
SKIP
WAIT(16, 8)
case 8:
SKIP
WAIT(17, 7)
case 7:
SKIP
WAIT(18, 6)
case 6:
SKIP
WAIT(19, 5)
case 5:
SKIP
WAIT(20, 4)
case 4:
SKIP
WAIT(21, 3)
case 3:
SKIP
WAIT(22, 2)
case 2:
SKIP
WAIT(23, 1)
case 1:
SKIP
ARITH(ADD(ADD(ADD(ADD(ADD(ENV_INT(1), ENV_INT(2)), ENV_INT(3)), ADD(ADD(ENV_INT(4), ENV_INT(5)), ENV_INT(6))), ADD(ADD(ADD(ENV_INT(7), ENV_INT(8)), ENV_INT(9)), ADD(ADD(ENV_INT(10), ENV_INT(11)), ENV_INT(12)))), ADD(ADD(ADD(ADD(ENV_INT(13), ENV_INT(14)), ENV_INT(15)), ADD(ADD(ENV_INT(16), ENV_INT(17)), ENV_INT(18))), ADD(ADD(ADD(ENV_INT(19), ENV_INT(20)), ENV_INT(21)), ADD(ADD(ENV_INT(22), ENV_INT(23)), ENV_INT(24))))))
LOAD_ARITH
RET
SKIP// end of function call
case 48:
SKIP// entry_point
LOAD_COPY(0)
STORE(1)
ALLOC_PARAMS(49)
PREPARE_PARAM_MOVE(1, 0)
CALL_TAIL(0)
RET
SKIP// end of function entry_point
case 49:
SKIP// square
//WAIT(1, 61)
case 61:
SKIP
//WAIT(3, 60)
case 60:
SKIP
ARITH(LT(ENV_INT(1), ENV_INT(3)))
JMP_IF_ZERO(52)
//WAIT(2, 59)
case 59:
SKIP
//WAIT(3, 58)
case 58:
SKIP
ARITH(LT(ENV_INT(2), ENV_INT(3)))
JMP_IF_ZERO(50)
//WAIT(0, 57)
case 57:
SKIP
ARITH(ADD(1, ENV_INT(0)))
STORE_ARITH(5)
//LOAD_COPY(1)
//STORE(5)
//WAIT(2, 56)
case 56:
SKIP
ARITH(ADD(ENV_INT(2), 1))
STORE_ARITH(7)
//LOAD_COPY(3)
//STORE(7)
ALLOC_PARAMS(12)
PREPARE_PARAM_MOVE(5, 0)
PREPARE_PARAM_MOVE(1, 1)
PREPARE_PARAM_MOVE(7, 2)
PREPARE_PARAM_MOVE(3, 3)
CALL_TAIL(49)
RET
JMP(51)
case 50:
SKIP
//LOAD_COPY(0)
//STORE(8)
//WAIT(1, 55)
case 55:
SKIP
ARITH(ADD(ENV_INT(1), 1))
STORE_ARITH(9)
ARITH(0)
STORE_ARITH(10)
//LOAD_COPY(3)
//STORE(11)
ALLOC_PARAMS(12)
PREPARE_PARAM_MOVE(0, 0)
PREPARE_PARAM_MOVE(9, 1)
PREPARE_PARAM_MOVE(10, 2)
PREPARE_PARAM_MOVE(3, 3)
CALL_TAIL(49)
RET
case 51:
SKIP
JMP(53)
case 52:
SKIP
//WAIT(0, 54)
case 54:
SKIP
LOAD_COPY(0)
RET
case 53:
SKIP
SKIP// end of function square
case 62:
SKIP// square_n
//std::cout << "Start" << std::endl;
ARITH(0)
STORE_ARITH(1)
ARITH(0)
STORE_ARITH(2)
ARITH(0)
STORE_ARITH(3)
LOAD_COPY(0)
STORE(4)
ALLOC_PARAMS(12)
PREPARE_PARAM_MOVE(1, 0)
PREPARE_PARAM_MOVE(2, 1)
PREPARE_PARAM_MOVE(3, 2)
PREPARE_PARAM_MOVE(4, 3)
CALL_TAIL(49)
RET
SKIP// end of function square_n
case 63:
FINALIZE
default:
break;
}
}
}
#endif
